{
  "collection": {
    "_": {
      "postman_id": "509c7826-8d25-4814-ac50-b4b7b6254192"
    },
    "item": [
      {
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "name": "/logs?userId={{userId}}",
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "{{getUserId}}"
              }
            ],
            "variable": []
          },
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
              "type": "text/javascript",
              "exec": [
                "var jsonData = pm.response.json();",
                "var firstLog = jsonData.logs[0];",
                "",
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});",
                "",
                "pm.test(\"Test that all types are correct\", function () {",
                "",
                "  pm.expect(jsonData).to.be.an(\"object\");",
                "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                "  ",
                "  if (jsonData.logs.length > 0) {",
                "  ",
                "  pm.expect(firstLog.message).to.be.a(\"string\");",
                "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                "  ",
                "  pm.expect(firstLog.object).to.be.an(\"object\");",
                "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                "  ",
                "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                "",
                "",
                "",
                "",
                "  }",
                "});",
                "",
                "",
                "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                "}) ",
                "",
                "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                "    if (data['userId'] && jsonData.logs.length > 0) {",
                "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                "    }",
                "})",
                "",
                "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                "",
                "})",
                "",
                "",
                "",
                ""
              ],
              "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
            }
          }
        ]
      },
      {
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "name": "add  user /user",
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 201\", function () {",
                "    pm.response.to.have.status(201);",
                "});",
                "",
                "pm.test(\"Body is correct\", function () {",
                "    var jsonData = pm.response.json();",
                "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                "});"
              ],
              "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
            }
          }
        ]
      },
      {
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "name": "update data",
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "\r",
                "pm.test(\"Body is correct\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                "});"
              ],
              "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
            }
          }
        ]
      },
      {
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "name": "delete user",
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "{{userId}}"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "{{update_adminId}}"
              },
              {
                "key": "timestamp",
                "value": "{{timestamp}}"
              }
            ],
            "variable": []
          },
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
              "type": "text/javascript",
              "exec": [
                "pm.test(\"Status code is 200\", function () {\r",
                "    pm.response.to.have.status(200);\r",
                "});\r",
                "\r",
                "pm.test(\"Body is correct\", function () {\r",
                "    var jsonData = pm.response.json();\r",
                "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                "});\r",
                ""
              ],
              "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
            }
          }
        ]
      }
    ],
    "event": [],
    "protocolProfileBehavior": {},
    "variable": [],
    "info": {
      "_postman_id": "509c7826-8d25-4814-ac50-b4b7b6254192",
      "name": "LogsCollection Copy",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "description": {
        "content": "This is a collection for testing pattaya web service api\n",
        "type": "text/plain"
      }
    }
  },
  "environment": {
    "id": "a73b8937-8f3c-4ebc-8540-986a68721cb3",
    "values": []
  },
  "globals": {
    "id": "3f363269-8f09-4673-ba68-4bea22bec7e3",
    "values": []
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 9,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 99,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 36,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 87.94444444444444,
      "responseMin": 71,
      "responseMax": 266,
      "responseSd": 32.886120378972144,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1597833423198,
      "completed": 1597833427422
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 4,
          "cycles": 9,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6424d22b-a54d-41e7-840f-c802fb712a8f",
          "httpRequestId": "33491f31-af4b-404f-b9b4-70f13361d92b"
        },
        "item": {
          "id": "12e3f771-0387-48f8-8159-507445a49aee",
          "name": "/logs?userId={{userId}}",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "logs"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{getUserId}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var firstLog = jsonData.logs[0];",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test that all types are correct\", function () {",
                  "",
                  "  pm.expect(jsonData).to.be.an(\"object\");",
                  "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                  "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                  "  ",
                  "  if (jsonData.logs.length > 0) {",
                  "  ",
                  "  pm.expect(firstLog.message).to.be.a(\"string\");",
                  "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.object).to.be.an(\"object\");",
                  "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                  "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                  "",
                  "",
                  "",
                  "",
                  "  }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                  "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                  "}) ",
                  "",
                  "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                  "    if (data['userId'] && jsonData.logs.length > 0) {",
                  "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                  "",
                  "})",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "null"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ec33d9c6-3172-48c3-9ee6-0341d9adb7e3",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "d1f46658-9b5d-45e7-8b99-e7a54ca98350",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:04 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              79,
              102,
              76,
              111,
              103,
              115,
              34,
              58,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              78,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              80,
              101,
              114,
              80,
              97,
              103,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 266,
          "responseSize": 60
        },
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Test that all types are correct",
            "skipped": false
          },
          {
            "assertion": "Logs per page must be the same of the logs array length",
            "skipped": false
          },
          {
            "assertion": "If There is a userId, the logs must contain only that userId",
            "skipped": false
          },
          {
            "assertion": "Logs returned by the server must be sorted chronologically",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f8cd6cda-f242-4f5e-b808-1439d2d92d6c",
          "length": 4,
          "cycles": 9,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d0221cea-5554-416a-98b4-f92cd82bdc6b"
        },
        "item": {
          "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
          "name": "add  user /user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                  "});"
                ],
                "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "964c49a5-fa9d-48a4-8488-7eb57410219a",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 537,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"New Employee Added\",\n    \"adminId\": \"251195\",\n    \"adminUser\": \"chatchanokwon\",\n    \"object\": {\n        \"action\": \"Added\",\n        \"userId\": \"2511170\",\n        \"name\": \"Nattawit\",\n        \"surname\": \"Janjaroen\",\n        \"idCard\": \"1111111111111\",\n        \"postcode\": \"10200\",\n        \"dateOfBirth\": \"27/09/1995\",\n        \"position\": \"Junior Backend Developer\",\n        \"startDate\": \"01/07/2020\",\n        \"phoneNumber\": \"0824933423\",\n        \"address\": \"Bangkok\"\n    },\n    \"timestamp\": \"Wed, 19 Aug 2020 03:06:03 GMT\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "09e41db3-213b-4e06-a929-5dc35cf4167c",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:04 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 120,
          "responseSize": 32
        },
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "68fcb953-8cdb-4108-af5b-d09db5db9fe7",
          "length": 4,
          "cycles": 9,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8577ce23-2a4e-4882-ac53-eb040c599e5f"
        },
        "item": {
          "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
          "name": "update data",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                  "});"
                ],
                "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "78c88b09-780e-4e5f-be8f-204f0947d636",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 486,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"edit surname of 2511170\",\r\n    \"adminId\": \"251174\",\r\n    \"adminUser\": \"phisonkha\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"2511170\",\r\n        \"name\": null,\r\n        \"surname\": \"khankhang\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"10510\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"CEO\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"Wed, 19 Aug 2020 03:06:03 GMT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c77a1566-eade-4226-a295-d2759f39ea9a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:04 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              97,
              110,
              103,
              101,
              32,
              91,
              108,
              97,
              115,
              116,
              32,
              110,
              97,
              109,
              101,
              44,
              32,
              112,
              111,
              115,
              116,
              99,
              111,
              100,
              101,
              44,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              111,
              110,
              93,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              32,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 84,
          "responseSize": 68
        },
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2c469d72-b506-41a2-96a7-8fdfe0842cb4",
          "length": 4,
          "cycles": 9,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "80fb07d3-1e25-440e-912c-f20e2c171040"
        },
        "item": {
          "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
          "name": "delete user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user",
                "{{userId}}"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "adminId",
                  "value": "{{update_adminId}}"
                },
                {
                  "key": "timestamp",
                  "value": "{{timestamp}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "2511170"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "251174"
              },
              {
                "key": "timestamp",
                "value": "Wed,%2019%20Aug%202020%2003:06:03%20GMT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e354a4ac-5d56-473a-ac51-2424dda32168",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "a57f8516-9c38-4717-8d41-491d9e897a28",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:04 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 76,
          "responseSize": 34
        },
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "76ab7f4a-4f29-438e-9d7e-de25fe87035c",
          "length": 4,
          "cycles": 9,
          "position": 0,
          "iteration": 1,
          "cr": true,
          "httpRequestId": "a793ab23-f772-4e7f-aa79-b6b8357d5d7a"
        },
        "item": {
          "id": "12e3f771-0387-48f8-8159-507445a49aee",
          "name": "/logs?userId={{userId}}",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "logs"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{getUserId}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var firstLog = jsonData.logs[0];",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test that all types are correct\", function () {",
                  "",
                  "  pm.expect(jsonData).to.be.an(\"object\");",
                  "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                  "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                  "  ",
                  "  if (jsonData.logs.length > 0) {",
                  "  ",
                  "  pm.expect(firstLog.message).to.be.a(\"string\");",
                  "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.object).to.be.an(\"object\");",
                  "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                  "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                  "",
                  "",
                  "",
                  "",
                  "  }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                  "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                  "}) ",
                  "",
                  "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                  "    if (data['userId'] && jsonData.logs.length > 0) {",
                  "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                  "",
                  "})",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e66c4efc-f771-465d-9dab-e8eebf58bc4b",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "b66c4a10-faa5-4bb8-ba4c-36dd987eb7fc",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:04 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              79,
              102,
              76,
              111,
              103,
              115,
              34,
              58,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              78,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              80,
              101,
              114,
              80,
              97,
              103,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 83,
          "responseSize": 60
        },
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Test that all types are correct",
            "skipped": false
          },
          {
            "assertion": "Logs per page must be the same of the logs array length",
            "skipped": false
          },
          {
            "assertion": "If There is a userId, the logs must contain only that userId",
            "skipped": false
          },
          {
            "assertion": "Logs returned by the server must be sorted chronologically",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "e2b418eb-5b58-4159-adfa-fb9d81899f07",
          "length": 4,
          "cycles": 9,
          "position": 1,
          "iteration": 1,
          "httpRequestId": "81ecd134-ebfb-40be-902d-e422789a54fc"
        },
        "item": {
          "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
          "name": "add  user /user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                  "});"
                ],
                "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "295fc0fe-5654-4a9a-8ba1-f11ae8ad5589",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 537,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"New Employee Added\",\n    \"adminId\": \"251195\",\n    \"adminUser\": \"chatchanokwon\",\n    \"object\": {\n        \"action\": \"Added\",\n        \"userId\": \"2511170\",\n        \"name\": \"Nattawit\",\n        \"surname\": \"Janjaroen\",\n        \"idCard\": \"1111111111111\",\n        \"postcode\": \"10200\",\n        \"dateOfBirth\": \"27/09/1995\",\n        \"position\": \"Junior Backend Developer\",\n        \"startDate\": \"01/07/2020\",\n        \"phoneNumber\": \"0824933423\",\n        \"address\": \"Bangkok\"\n    },\n    \"timestamp\": \"Wed, 19 Aug 2020 03:07:03 GMT\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "19bffae9-ac0d-47e9-b436-debfec9112e9",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:04 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 110,
          "responseSize": 32
        },
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b05a7871-023b-4f93-8a17-0e563781bec3",
          "length": 4,
          "cycles": 9,
          "position": 2,
          "iteration": 1,
          "httpRequestId": "da75fe67-298f-489d-a6c6-d708e35a9a6d"
        },
        "item": {
          "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
          "name": "update data",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                  "});"
                ],
                "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "281bcd08-4b6f-404b-92ac-15780eb85c34",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 486,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"edit surname of 2511170\",\r\n    \"adminId\": \"251174\",\r\n    \"adminUser\": \"phisonkha\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"2511170\",\r\n        \"name\": null,\r\n        \"surname\": \"khankhang\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"10510\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"CEO\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"Wed, 19 Aug 2020 03:07:03 GMT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "39fd30ab-2212-4594-9ad4-36b2c2ec8451",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:04 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              97,
              110,
              103,
              101,
              32,
              91,
              108,
              97,
              115,
              116,
              32,
              110,
              97,
              109,
              101,
              44,
              32,
              112,
              111,
              115,
              116,
              99,
              111,
              100,
              101,
              44,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              111,
              110,
              93,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              32,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 77,
          "responseSize": 68
        },
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "6b179c4a-2602-47b4-b813-eb7830033c8a",
          "length": 4,
          "cycles": 9,
          "position": 3,
          "iteration": 1,
          "httpRequestId": "3d6c69a8-6803-4022-8442-3e48a13920fd"
        },
        "item": {
          "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
          "name": "delete user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user",
                "{{userId}}"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "adminId",
                  "value": "{{update_adminId}}"
                },
                {
                  "key": "timestamp",
                  "value": "{{timestamp}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "2511170"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "251174"
              },
              {
                "key": "timestamp",
                "value": "Wed,%2019%20Aug%202020%2003:07:03%20GMT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6d51146e-485e-459d-8bb4-99dee5607e24",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "64564e59-2557-42b0-b98f-1cb96d721ab6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:04 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 72,
          "responseSize": 34
        },
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "fc73030a-d69c-4311-8a78-11de3aeff7d9",
          "length": 4,
          "cycles": 9,
          "position": 0,
          "iteration": 2,
          "cr": true,
          "httpRequestId": "7dcc3ecb-e303-4982-b3b8-64362db23454"
        },
        "item": {
          "id": "12e3f771-0387-48f8-8159-507445a49aee",
          "name": "/logs?userId={{userId}}",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "logs"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{getUserId}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var firstLog = jsonData.logs[0];",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test that all types are correct\", function () {",
                  "",
                  "  pm.expect(jsonData).to.be.an(\"object\");",
                  "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                  "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                  "  ",
                  "  if (jsonData.logs.length > 0) {",
                  "  ",
                  "  pm.expect(firstLog.message).to.be.a(\"string\");",
                  "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.object).to.be.an(\"object\");",
                  "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                  "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                  "",
                  "",
                  "",
                  "",
                  "  }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                  "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                  "}) ",
                  "",
                  "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                  "    if (data['userId'] && jsonData.logs.length > 0) {",
                  "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                  "",
                  "})",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "f28bc5e3-a587-455c-8540-fb6edc6c6638",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f13d53d2-583c-4509-a9b0-a1c2c8e8cb86",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              79,
              102,
              76,
              111,
              103,
              115,
              34,
              58,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              78,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              80,
              101,
              114,
              80,
              97,
              103,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 74,
          "responseSize": 60
        },
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Test that all types are correct",
            "skipped": false
          },
          {
            "assertion": "Logs per page must be the same of the logs array length",
            "skipped": false
          },
          {
            "assertion": "If There is a userId, the logs must contain only that userId",
            "skipped": false
          },
          {
            "assertion": "Logs returned by the server must be sorted chronologically",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2ecc5bd0-77e3-46ac-a15f-8b65285df3b6",
          "length": 4,
          "cycles": 9,
          "position": 1,
          "iteration": 2,
          "httpRequestId": "82094737-eb5d-478c-9418-11a0e53844bb"
        },
        "item": {
          "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
          "name": "add  user /user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                  "});"
                ],
                "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "1d59aced-3835-4109-8f8e-ee7977b84b3d",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 537,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"New Employee Added\",\n    \"adminId\": \"251195\",\n    \"adminUser\": \"chatchanokwon\",\n    \"object\": {\n        \"action\": \"Added\",\n        \"userId\": \"2511170\",\n        \"name\": \"Nattawit\",\n        \"surname\": \"Janjaroen\",\n        \"idCard\": \"1111111111111\",\n        \"postcode\": \"10200\",\n        \"dateOfBirth\": \"27/09/1995\",\n        \"position\": \"Junior Backend Developer\",\n        \"startDate\": \"01/07/2020\",\n        \"phoneNumber\": \"0824933423\",\n        \"address\": \"Bangkok\"\n    },\n    \"timestamp\": \"Wed, 19 Aug 2020 03:08:03 GMT\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ca289f45-23b6-44d3-983b-34a79ea88768",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 80,
          "responseSize": 32
        },
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "537cf860-806e-4331-bca8-b916b0c629f8",
          "length": 4,
          "cycles": 9,
          "position": 2,
          "iteration": 2,
          "httpRequestId": "9e2e597f-b5bd-4599-b29d-fbb00005c9a8"
        },
        "item": {
          "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
          "name": "update data",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                  "});"
                ],
                "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "95257cd5-7ba1-4898-aca0-6e9afe25e65f",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 486,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"edit surname of 2511170\",\r\n    \"adminId\": \"251174\",\r\n    \"adminUser\": \"phisonkha\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"2511170\",\r\n        \"name\": null,\r\n        \"surname\": \"khankhang\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"10510\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"CEO\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"Wed, 19 Aug 2020 03:08:03 GMT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "bd9ed11c-24d7-4ecd-80e1-ed405232a9fb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              97,
              110,
              103,
              101,
              32,
              91,
              108,
              97,
              115,
              116,
              32,
              110,
              97,
              109,
              101,
              44,
              32,
              112,
              111,
              115,
              116,
              99,
              111,
              100,
              101,
              44,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              111,
              110,
              93,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              32,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 83,
          "responseSize": 68
        },
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "01ae34c2-39fe-417f-b1a9-cd1ae4cfcb41",
          "length": 4,
          "cycles": 9,
          "position": 3,
          "iteration": 2,
          "httpRequestId": "499bcdf2-3813-4c47-ac29-ca849528ee11"
        },
        "item": {
          "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
          "name": "delete user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user",
                "{{userId}}"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "adminId",
                  "value": "{{update_adminId}}"
                },
                {
                  "key": "timestamp",
                  "value": "{{timestamp}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "2511170"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "251174"
              },
              {
                "key": "timestamp",
                "value": "Wed,%2019%20Aug%202020%2003:08:03%20GMT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "814b342b-37e8-4917-94cb-7af9a4b66837",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "aa43fd58-90d1-4c29-a9b5-6bbc8104a49d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 76,
          "responseSize": 34
        },
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "edf7d9e4-ccd3-43c5-a9c0-6bf14f10edc0",
          "length": 4,
          "cycles": 9,
          "position": 0,
          "iteration": 3,
          "cr": true,
          "httpRequestId": "4f51cc0f-787a-4cf9-a93c-98ea10e3057e"
        },
        "item": {
          "id": "12e3f771-0387-48f8-8159-507445a49aee",
          "name": "/logs?userId={{userId}}",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "logs"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{getUserId}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var firstLog = jsonData.logs[0];",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test that all types are correct\", function () {",
                  "",
                  "  pm.expect(jsonData).to.be.an(\"object\");",
                  "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                  "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                  "  ",
                  "  if (jsonData.logs.length > 0) {",
                  "  ",
                  "  pm.expect(firstLog.message).to.be.a(\"string\");",
                  "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.object).to.be.an(\"object\");",
                  "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                  "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                  "",
                  "",
                  "",
                  "",
                  "  }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                  "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                  "}) ",
                  "",
                  "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                  "    if (data['userId'] && jsonData.logs.length > 0) {",
                  "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                  "",
                  "})",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "3"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "92e0e1fb-f0df-45af-a012-936877ebc68c",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e8505b9e-adbc-4ca0-a79c-b5b29460f976",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              79,
              102,
              76,
              111,
              103,
              115,
              34,
              58,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              78,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              80,
              101,
              114,
              80,
              97,
              103,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 77,
          "responseSize": 60
        },
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Test that all types are correct",
            "skipped": false
          },
          {
            "assertion": "Logs per page must be the same of the logs array length",
            "skipped": false
          },
          {
            "assertion": "If There is a userId, the logs must contain only that userId",
            "skipped": false
          },
          {
            "assertion": "Logs returned by the server must be sorted chronologically",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5a1a0bbd-3fa8-4e97-9d1e-079ea433b9f0",
          "length": 4,
          "cycles": 9,
          "position": 1,
          "iteration": 3,
          "httpRequestId": "e2dbf61e-ebc9-4bc7-91f9-dd9579f2b425"
        },
        "item": {
          "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
          "name": "add  user /user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                  "});"
                ],
                "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6b3e1193-7a5d-4ea5-bfe5-8520f691ada5",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 537,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"New Employee Added\",\n    \"adminId\": \"251195\",\n    \"adminUser\": \"chatchanokwon\",\n    \"object\": {\n        \"action\": \"Added\",\n        \"userId\": \"2511170\",\n        \"name\": \"Nattawit\",\n        \"surname\": \"Janjaroen\",\n        \"idCard\": \"1111111111111\",\n        \"postcode\": \"10200\",\n        \"dateOfBirth\": \"27/09/1995\",\n        \"position\": \"Junior Backend Developer\",\n        \"startDate\": \"01/07/2020\",\n        \"phoneNumber\": \"0824933423\",\n        \"address\": \"Bangkok\"\n    },\n    \"timestamp\": \"Wed, 19 Aug 2020 04:00:03 GMT\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "0dc654d1-9da5-4c7a-8e27-fa3a8331b2fb",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 82,
          "responseSize": 32
        },
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "d923c6b2-3772-4d76-9b27-ea51f755adae",
          "length": 4,
          "cycles": 9,
          "position": 2,
          "iteration": 3,
          "httpRequestId": "1edd6063-30cb-4312-a909-a330c1270aa0"
        },
        "item": {
          "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
          "name": "update data",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                  "});"
                ],
                "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a9196073-2afa-4326-9b87-f81abf8cba48",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 486,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"edit surname of 2511170\",\r\n    \"adminId\": \"251174\",\r\n    \"adminUser\": \"phisonkha\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"2511170\",\r\n        \"name\": null,\r\n        \"surname\": \"khankhang\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"10510\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"CEO\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"Wed, 19 Aug 2020 04:00:03 GMT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "31bd27bd-7585-47dc-a5ea-ee6b64aa9324",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              97,
              110,
              103,
              101,
              32,
              91,
              108,
              97,
              115,
              116,
              32,
              110,
              97,
              109,
              101,
              44,
              32,
              112,
              111,
              115,
              116,
              99,
              111,
              100,
              101,
              44,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              111,
              110,
              93,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              32,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 81,
          "responseSize": 68
        },
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bcfe7825-89c4-4ada-b604-e07c9371bad5",
          "length": 4,
          "cycles": 9,
          "position": 3,
          "iteration": 3,
          "httpRequestId": "46675cc9-19c7-496a-8d1e-39d0ad78d479"
        },
        "item": {
          "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
          "name": "delete user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user",
                "{{userId}}"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "adminId",
                  "value": "{{update_adminId}}"
                },
                {
                  "key": "timestamp",
                  "value": "{{timestamp}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "2511170"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "251174"
              },
              {
                "key": "timestamp",
                "value": "Wed,%2019%20Aug%202020%2004:00:03%20GMT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "209efcd2-09c8-44a6-8f2d-dd9918c0b12c",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "ff4f0809-5ff3-453b-84ef-49ba91664f62",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 111,
          "responseSize": 34
        },
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "cc9d0def-2737-46cb-85ca-0d035e0d6320",
          "length": 4,
          "cycles": 9,
          "position": 0,
          "iteration": 4,
          "cr": true,
          "httpRequestId": "2e51e6e3-4ab5-4c2b-9036-95b06262bcca"
        },
        "item": {
          "id": "12e3f771-0387-48f8-8159-507445a49aee",
          "name": "/logs?userId={{userId}}",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "logs"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{getUserId}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var firstLog = jsonData.logs[0];",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test that all types are correct\", function () {",
                  "",
                  "  pm.expect(jsonData).to.be.an(\"object\");",
                  "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                  "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                  "  ",
                  "  if (jsonData.logs.length > 0) {",
                  "  ",
                  "  pm.expect(firstLog.message).to.be.a(\"string\");",
                  "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.object).to.be.an(\"object\");",
                  "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                  "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                  "",
                  "",
                  "",
                  "",
                  "  }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                  "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                  "}) ",
                  "",
                  "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                  "    if (data['userId'] && jsonData.logs.length > 0) {",
                  "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                  "",
                  "})",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "4"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4841523c-03da-4931-b5ae-1ff53a7e9c57",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "f4c09a91-b037-40f4-bff1-0f6d40114e21",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              79,
              102,
              76,
              111,
              103,
              115,
              34,
              58,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              78,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              80,
              101,
              114,
              80,
              97,
              103,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 74,
          "responseSize": 60
        },
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Test that all types are correct",
            "skipped": false
          },
          {
            "assertion": "Logs per page must be the same of the logs array length",
            "skipped": false
          },
          {
            "assertion": "If There is a userId, the logs must contain only that userId",
            "skipped": false
          },
          {
            "assertion": "Logs returned by the server must be sorted chronologically",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "bb67a3b4-7ed5-4033-9e6e-082a57b8868f",
          "length": 4,
          "cycles": 9,
          "position": 1,
          "iteration": 4,
          "httpRequestId": "fa02d1ee-b1e4-4366-96ec-94a82c6b41c1"
        },
        "item": {
          "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
          "name": "add  user /user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                  "});"
                ],
                "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "ab3b58d4-c6c4-4912-84c8-4267f08ed882",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 537,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"New Employee Added\",\n    \"adminId\": \"251195\",\n    \"adminUser\": \"chatchanokwon\",\n    \"object\": {\n        \"action\": \"Added\",\n        \"userId\": \"2511170\",\n        \"name\": \"Nattawit\",\n        \"surname\": \"Janjaroen\",\n        \"idCard\": \"1111111111111\",\n        \"postcode\": \"10200\",\n        \"dateOfBirth\": \"27/09/1995\",\n        \"position\": \"Junior Backend Developer\",\n        \"startDate\": \"01/07/2020\",\n        \"phoneNumber\": \"0824933423\",\n        \"address\": \"Bangkok\"\n    },\n    \"timestamp\": \"Wed, 19 Aug 2020 04:01:03 GMT\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "f06bda42-999c-43ee-b20b-6da1ffdcb1d0",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:05 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 72,
          "responseSize": 32
        },
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1926300e-2b8c-4d78-94ba-34bc65e04e3f",
          "length": 4,
          "cycles": 9,
          "position": 2,
          "iteration": 4,
          "httpRequestId": "0c9ac560-d0c0-48e5-9a06-df1d5737a1d3"
        },
        "item": {
          "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
          "name": "update data",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                  "});"
                ],
                "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "b40f3ea8-c01f-4a79-8325-02eca30a2455",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 486,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"edit surname of 2511170\",\r\n    \"adminId\": \"251174\",\r\n    \"adminUser\": \"phisonkha\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"2511170\",\r\n        \"name\": null,\r\n        \"surname\": \"khankhang\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"10510\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"CEO\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"Wed, 19 Aug 2020 04:01:03 GMT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "6a2234ba-c6d0-47c5-a2df-e10b568c04de",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:06 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              97,
              110,
              103,
              101,
              32,
              91,
              108,
              97,
              115,
              116,
              32,
              110,
              97,
              109,
              101,
              44,
              32,
              112,
              111,
              115,
              116,
              99,
              111,
              100,
              101,
              44,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              111,
              110,
              93,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              32,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 75,
          "responseSize": 68
        },
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b5d04706-d45a-4483-b04b-fd9e8234b80d",
          "length": 4,
          "cycles": 9,
          "position": 3,
          "iteration": 4,
          "httpRequestId": "95e1720e-8775-4be9-ad6b-2a8c24f8e364"
        },
        "item": {
          "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
          "name": "delete user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user",
                "{{userId}}"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "adminId",
                  "value": "{{update_adminId}}"
                },
                {
                  "key": "timestamp",
                  "value": "{{timestamp}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "2511170"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "251174"
              },
              {
                "key": "timestamp",
                "value": "Wed,%2019%20Aug%202020%2004:01:03%20GMT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "fda81dea-d7a4-4454-8415-9026b13106dd",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "d206c7ce-f15c-4b05-b878-86bd85537323",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:06 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 73,
          "responseSize": 34
        },
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "b36cf816-de7e-411c-8cba-a551a06baa37",
          "length": 4,
          "cycles": 9,
          "position": 0,
          "iteration": 5,
          "cr": true,
          "httpRequestId": "bd8e1540-031f-4550-a218-c7904e0e6a05"
        },
        "item": {
          "id": "12e3f771-0387-48f8-8159-507445a49aee",
          "name": "/logs?userId={{userId}}",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "logs"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{getUserId}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var firstLog = jsonData.logs[0];",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test that all types are correct\", function () {",
                  "",
                  "  pm.expect(jsonData).to.be.an(\"object\");",
                  "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                  "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                  "  ",
                  "  if (jsonData.logs.length > 0) {",
                  "  ",
                  "  pm.expect(firstLog.message).to.be.a(\"string\");",
                  "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.object).to.be.an(\"object\");",
                  "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                  "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                  "",
                  "",
                  "",
                  "",
                  "  }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                  "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                  "}) ",
                  "",
                  "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                  "    if (data['userId'] && jsonData.logs.length > 0) {",
                  "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                  "",
                  "})",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "5"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "d9d9e671-452d-4e43-ae75-1174c6851141",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "e2fdc263-e560-44e5-a637-70b7612504bb",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:06 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              79,
              102,
              76,
              111,
              103,
              115,
              34,
              58,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              78,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              80,
              101,
              114,
              80,
              97,
              103,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 80,
          "responseSize": 60
        },
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Test that all types are correct",
            "skipped": false
          },
          {
            "assertion": "Logs per page must be the same of the logs array length",
            "skipped": false
          },
          {
            "assertion": "If There is a userId, the logs must contain only that userId",
            "skipped": false
          },
          {
            "assertion": "Logs returned by the server must be sorted chronologically",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "77e90530-3764-42d8-b5a7-27e903d1f568",
          "length": 4,
          "cycles": 9,
          "position": 1,
          "iteration": 5,
          "httpRequestId": "49bf5cba-c89d-456c-8c61-efa04eba9684"
        },
        "item": {
          "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
          "name": "add  user /user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                  "});"
                ],
                "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "e3d97f62-ed5e-450a-9ad2-beefab3a3c1a",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 537,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"New Employee Added\",\n    \"adminId\": \"251195\",\n    \"adminUser\": \"chatchanokwon\",\n    \"object\": {\n        \"action\": \"Added\",\n        \"userId\": \"2511170\",\n        \"name\": \"Nattawit\",\n        \"surname\": \"Janjaroen\",\n        \"idCard\": \"1111111111111\",\n        \"postcode\": \"10200\",\n        \"dateOfBirth\": \"27/09/1995\",\n        \"position\": \"Junior Backend Developer\",\n        \"startDate\": \"01/07/2020\",\n        \"phoneNumber\": \"0824933423\",\n        \"address\": \"Bangkok\"\n    },\n    \"timestamp\": \"Wed, 19 Aug 2020 04:02:03 GMT\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "18b24425-50be-4e4e-9d6c-717b97dac69b",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:06 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 84,
          "responseSize": 32
        },
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "95542f82-9d20-45a6-9f47-690693254633",
          "length": 4,
          "cycles": 9,
          "position": 2,
          "iteration": 5,
          "httpRequestId": "55370cbd-98fd-40eb-bbfc-f78d7e589b69"
        },
        "item": {
          "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
          "name": "update data",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                  "});"
                ],
                "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8a7f33c9-65b7-4675-8b67-698c5c076a80",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 486,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"edit surname of 2511170\",\r\n    \"adminId\": \"251174\",\r\n    \"adminUser\": \"phisonkha\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"2511170\",\r\n        \"name\": null,\r\n        \"surname\": \"khankhang\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"10510\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"CEO\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"Wed, 19 Aug 2020 04:02:03 GMT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "4a488e0e-cc16-4ea9-b0f9-00a829db9c8f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:06 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              97,
              110,
              103,
              101,
              32,
              91,
              108,
              97,
              115,
              116,
              32,
              110,
              97,
              109,
              101,
              44,
              32,
              112,
              111,
              115,
              116,
              99,
              111,
              100,
              101,
              44,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              111,
              110,
              93,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              32,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 79,
          "responseSize": 68
        },
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f853ec8e-f054-44d1-b4f7-27f8a7506e37",
          "length": 4,
          "cycles": 9,
          "position": 3,
          "iteration": 5,
          "httpRequestId": "26a4cbb9-5828-4c5f-b302-07a692b9c43c"
        },
        "item": {
          "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
          "name": "delete user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user",
                "{{userId}}"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "adminId",
                  "value": "{{update_adminId}}"
                },
                {
                  "key": "timestamp",
                  "value": "{{timestamp}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "2511170"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "251174"
              },
              {
                "key": "timestamp",
                "value": "Wed,%2019%20Aug%202020%2004:02:03%20GMT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "0c4dbce0-7472-46be-ab60-a41c64bd3a17",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "74d5de9e-ba6e-4248-ac7c-666b688c86b8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:06 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 130,
          "responseSize": 34
        },
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "f6e212ea-26d4-4ed9-a522-1b48f920e0fc",
          "length": 4,
          "cycles": 9,
          "position": 0,
          "iteration": 6,
          "cr": true,
          "httpRequestId": "bfb35b0a-2544-4df6-b439-18380ca2eb27"
        },
        "item": {
          "id": "12e3f771-0387-48f8-8159-507445a49aee",
          "name": "/logs?userId={{userId}}",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "logs"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{getUserId}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var firstLog = jsonData.logs[0];",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test that all types are correct\", function () {",
                  "",
                  "  pm.expect(jsonData).to.be.an(\"object\");",
                  "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                  "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                  "  ",
                  "  if (jsonData.logs.length > 0) {",
                  "  ",
                  "  pm.expect(firstLog.message).to.be.a(\"string\");",
                  "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.object).to.be.an(\"object\");",
                  "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                  "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                  "",
                  "",
                  "",
                  "",
                  "  }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                  "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                  "}) ",
                  "",
                  "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                  "    if (data['userId'] && jsonData.logs.length > 0) {",
                  "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                  "",
                  "})",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "6"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "34e16a42-fcd5-4b40-9d1d-ac9b5343d680",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "fa24efe5-cb48-4c0f-9fdc-f7cf6301fb42",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:06 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              79,
              102,
              76,
              111,
              103,
              115,
              34,
              58,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              78,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              80,
              101,
              114,
              80,
              97,
              103,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 80,
          "responseSize": 60
        },
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Test that all types are correct",
            "skipped": false
          },
          {
            "assertion": "Logs per page must be the same of the logs array length",
            "skipped": false
          },
          {
            "assertion": "If There is a userId, the logs must contain only that userId",
            "skipped": false
          },
          {
            "assertion": "Logs returned by the server must be sorted chronologically",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "2d7f5e70-716c-4821-9040-e570858f4353",
          "length": 4,
          "cycles": 9,
          "position": 1,
          "iteration": 6,
          "httpRequestId": "a469f9c0-ecb3-4e0a-9677-1d812afcc9db"
        },
        "item": {
          "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
          "name": "add  user /user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                  "});"
                ],
                "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "62bb6429-15bf-4884-85fc-712b26a9fff5",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 537,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"New Employee Added\",\n    \"adminId\": \"251195\",\n    \"adminUser\": \"chatchanokwon\",\n    \"object\": {\n        \"action\": \"Added\",\n        \"userId\": \"2511170\",\n        \"name\": \"Nattawit\",\n        \"surname\": \"Janjaroen\",\n        \"idCard\": \"1111111111111\",\n        \"postcode\": \"10200\",\n        \"dateOfBirth\": \"27/09/1995\",\n        \"position\": \"Junior Backend Developer\",\n        \"startDate\": \"01/07/2020\",\n        \"phoneNumber\": \"0824933423\",\n        \"address\": \"Bangkok\"\n    },\n    \"timestamp\": \"Wed, 19 Aug 2020 04:03:03 GMT\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "b076cfb3-8b65-4817-a741-3960c83fc713",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:06 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 74,
          "responseSize": 32
        },
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5974c829-348e-4c69-8255-3897b98f2a19",
          "length": 4,
          "cycles": 9,
          "position": 2,
          "iteration": 6,
          "httpRequestId": "a145b362-61a4-46bb-8336-fbe6d17188e4"
        },
        "item": {
          "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
          "name": "update data",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                  "});"
                ],
                "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "8a502834-e98d-474c-8a39-5a17bde385d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 486,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"edit surname of 2511170\",\r\n    \"adminId\": \"251174\",\r\n    \"adminUser\": \"phisonkha\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"2511170\",\r\n        \"name\": null,\r\n        \"surname\": \"khankhang\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"10510\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"CEO\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"Wed, 19 Aug 2020 04:03:03 GMT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "1ffc5440-f6ae-4bf0-9f11-55ec91e0548c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:06 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              97,
              110,
              103,
              101,
              32,
              91,
              108,
              97,
              115,
              116,
              32,
              110,
              97,
              109,
              101,
              44,
              32,
              112,
              111,
              115,
              116,
              99,
              111,
              100,
              101,
              44,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              111,
              110,
              93,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              32,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 79,
          "responseSize": 68
        },
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "add8388e-22da-4a80-855d-3712595d3097",
          "length": 4,
          "cycles": 9,
          "position": 3,
          "iteration": 6,
          "httpRequestId": "70cd6c7f-5fed-4fab-8b32-8947d3e05229"
        },
        "item": {
          "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
          "name": "delete user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user",
                "{{userId}}"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "adminId",
                  "value": "{{update_adminId}}"
                },
                {
                  "key": "timestamp",
                  "value": "{{timestamp}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "2511170"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "251174"
              },
              {
                "key": "timestamp",
                "value": "Wed,%2019%20Aug%202020%2004:03:03%20GMT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6be95364-cf3e-4df2-be93-324614a6e6be",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9949e5c6-0d03-46a3-8b9d-43bf79207f57",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:07 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 86,
          "responseSize": 34
        },
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "482eb66b-c469-43da-8204-80de93b05b81",
          "length": 4,
          "cycles": 9,
          "position": 0,
          "iteration": 7,
          "cr": true,
          "httpRequestId": "248c7d76-5c96-45e4-8b1e-0a7c8c604c46"
        },
        "item": {
          "id": "12e3f771-0387-48f8-8159-507445a49aee",
          "name": "/logs?userId={{userId}}",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "logs"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{getUserId}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var firstLog = jsonData.logs[0];",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test that all types are correct\", function () {",
                  "",
                  "  pm.expect(jsonData).to.be.an(\"object\");",
                  "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                  "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                  "  ",
                  "  if (jsonData.logs.length > 0) {",
                  "  ",
                  "  pm.expect(firstLog.message).to.be.a(\"string\");",
                  "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.object).to.be.an(\"object\");",
                  "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                  "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                  "",
                  "",
                  "",
                  "",
                  "  }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                  "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                  "}) ",
                  "",
                  "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                  "    if (data['userId'] && jsonData.logs.length > 0) {",
                  "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                  "",
                  "})",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "7"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "65beefab-9eaa-4ed0-909f-8a905710d2d4",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "ce0ad5f8-4f48-486a-8188-a275b8f78443",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:07 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              79,
              102,
              76,
              111,
              103,
              115,
              34,
              58,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              78,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              80,
              101,
              114,
              80,
              97,
              103,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 77,
          "responseSize": 60
        },
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Test that all types are correct",
            "skipped": false
          },
          {
            "assertion": "Logs per page must be the same of the logs array length",
            "skipped": false
          },
          {
            "assertion": "If There is a userId, the logs must contain only that userId",
            "skipped": false
          },
          {
            "assertion": "Logs returned by the server must be sorted chronologically",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "50c0659f-6488-475f-a5ed-53ca85a9477b",
          "length": 4,
          "cycles": 9,
          "position": 1,
          "iteration": 7,
          "httpRequestId": "2ff46b44-26e2-4e71-963d-cfae68d73733"
        },
        "item": {
          "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
          "name": "add  user /user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                  "});"
                ],
                "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "6e39f2ca-e2e7-4795-8f95-b50c80af26bb",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 537,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"New Employee Added\",\n    \"adminId\": \"251195\",\n    \"adminUser\": \"chatchanokwon\",\n    \"object\": {\n        \"action\": \"Added\",\n        \"userId\": \"2511170\",\n        \"name\": \"Nattawit\",\n        \"surname\": \"Janjaroen\",\n        \"idCard\": \"1111111111111\",\n        \"postcode\": \"10200\",\n        \"dateOfBirth\": \"27/09/1995\",\n        \"position\": \"Junior Backend Developer\",\n        \"startDate\": \"01/07/2020\",\n        \"phoneNumber\": \"0824933423\",\n        \"address\": \"Bangkok\"\n    },\n    \"timestamp\": \"Wed, 19 Aug 2020 04:04:03 GMT\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "e0ef858f-ab60-4383-a9ef-0f0d28a32fd7",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:07 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 85,
          "responseSize": 32
        },
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "5f636ab1-8440-4c83-bcbb-80a7f31e6413",
          "length": 4,
          "cycles": 9,
          "position": 2,
          "iteration": 7,
          "httpRequestId": "5c408e67-8a3b-4f70-b74e-9940cfb14fc1"
        },
        "item": {
          "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
          "name": "update data",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                  "});"
                ],
                "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "a3364531-8cb8-44ae-804b-8e88aeb9c484",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 486,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"edit surname of 2511170\",\r\n    \"adminId\": \"251174\",\r\n    \"adminUser\": \"phisonkha\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"2511170\",\r\n        \"name\": null,\r\n        \"surname\": \"khankhang\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"10510\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"CEO\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"Wed, 19 Aug 2020 04:04:03 GMT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "9a730f5b-aadb-4df4-b792-f9018061f386",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:07 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              97,
              110,
              103,
              101,
              32,
              91,
              108,
              97,
              115,
              116,
              32,
              110,
              97,
              109,
              101,
              44,
              32,
              112,
              111,
              115,
              116,
              99,
              111,
              100,
              101,
              44,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              111,
              110,
              93,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              32,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 72,
          "responseSize": 68
        },
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "ea658ffd-02d1-4276-85f2-8c8c07af8076",
          "length": 4,
          "cycles": 9,
          "position": 3,
          "iteration": 7,
          "httpRequestId": "cc44fcc1-0c88-4599-9c50-5e8a0e7094c4"
        },
        "item": {
          "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
          "name": "delete user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user",
                "{{userId}}"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "adminId",
                  "value": "{{update_adminId}}"
                },
                {
                  "key": "timestamp",
                  "value": "{{timestamp}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "2511170"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "251174"
              },
              {
                "key": "timestamp",
                "value": "Wed,%2019%20Aug%202020%2004:04:03%20GMT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "259231a5-5b18-44b3-856d-1f2cf2d553a9",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "7a634df9-aae4-4ea9-99a4-6932d7af8ef3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:07 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 80,
          "responseSize": 34
        },
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "9e1fddd6-03b7-4061-bbeb-87b21bb630d0",
          "length": 4,
          "cycles": 9,
          "position": 0,
          "iteration": 8,
          "cr": true,
          "httpRequestId": "191554e4-d0ed-4d8f-a22d-6c232a71218f"
        },
        "item": {
          "id": "12e3f771-0387-48f8-8159-507445a49aee",
          "name": "/logs?userId={{userId}}",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "logs"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "userId",
                  "value": "{{getUserId}}"
                }
              ],
              "variable": []
            },
            "method": "GET"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f7ce19ef-8247-42b1-afb6-43cbd8742a91",
                "type": "text/javascript",
                "exec": [
                  "var jsonData = pm.response.json();",
                  "var firstLog = jsonData.logs[0];",
                  "",
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Test that all types are correct\", function () {",
                  "",
                  "  pm.expect(jsonData).to.be.an(\"object\");",
                  "  pm.expect(jsonData.numberOfLogs).to.be.a(\"number\");",
                  "  pm.expect(jsonData.pageNumber).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logsPerPage).to.be.a(\"number\");",
                  "  pm.expect(jsonData.logs).to.be.an(\"array\");",
                  "  ",
                  "  if (jsonData.logs.length > 0) {",
                  "  ",
                  "  pm.expect(firstLog.message).to.be.a(\"string\");",
                  "  pm.expect(firstLog.adminId).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.object).to.be.an(\"object\");",
                  "  pm.expect(firstLog.somethingElse).to.be.undefined;",
                  "  pm.expect(firstLog.object.userId).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.action).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.idCard).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.postcode).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.name).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.surname).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.dateOfBirth).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.position).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.startDate).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.phoneNumber).to.be.a(\"string\");",
                  "  pm.expect(firstLog.object.address).to.be.a(\"string\");",
                  "  ",
                  "  pm.expect(firstLog.timestamp).to.be.a(\"string\");  ",
                  "",
                  "",
                  "",
                  "",
                  "  }",
                  "});",
                  "",
                  "",
                  "pm.test(\"Logs per page must be the same of the logs array length\", () => {",
                  "    pm.expect(jsonData.logs.length).to.eql(jsonData.numberOfLogs);",
                  "}) ",
                  "",
                  "pm.test(\"If There is a userId, the logs must contain only that userId\", () => {",
                  "    if (data['userId'] && jsonData.logs.length > 0) {",
                  "        pm.expect(firstLog.object.userId).to.eql(`${data['getUserId']}`); ",
                  "    }",
                  "})",
                  "",
                  "pm.test(\"Logs returned by the server must be sorted chronologically\", () => {",
                  "",
                  "})",
                  "",
                  "",
                  "",
                  ""
                ],
                "_lastExecutionId": "4e021e04-81b4-4a0b-907c-91fac10752fb"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "logs"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "userId",
                "value": "8"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "98ba02da-8412-4f04-8680-e37e60710b42",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "GET"
        },
        "response": {
          "id": "50bd10e7-a38f-4248-a646-ceaa5115b90d",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:07 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              110,
              117,
              109,
              98,
              101,
              114,
              79,
              102,
              76,
              111,
              103,
              115,
              34,
              58,
              48,
              44,
              34,
              112,
              97,
              103,
              101,
              78,
              117,
              109,
              98,
              101,
              114,
              34,
              58,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              80,
              101,
              114,
              80,
              97,
              103,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              108,
              111,
              103,
              115,
              34,
              58,
              91,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 71,
          "responseSize": 60
        },
        "id": "12e3f771-0387-48f8-8159-507445a49aee",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Test that all types are correct",
            "skipped": false
          },
          {
            "assertion": "Logs per page must be the same of the logs array length",
            "skipped": false
          },
          {
            "assertion": "If There is a userId, the logs must contain only that userId",
            "skipped": false
          },
          {
            "assertion": "Logs returned by the server must be sorted chronologically",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "1de5a4dd-4eb6-446a-87e7-603d6180ac4a",
          "length": 4,
          "cycles": 9,
          "position": 1,
          "iteration": 8,
          "httpRequestId": "6980fdcd-50cc-4b4c-8693-f89e2dd9843f"
        },
        "item": {
          "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
          "name": "add  user /user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n    \"message\": \"{{message}}\",\n    \"adminId\": \"{{adminId}}\",\n    \"adminUser\": \"{{adminUser}}\",\n    \"object\": {\n        \"action\": \"{{action}}\",\n        \"userId\": \"{{userId}}\",\n        \"name\": \"{{name}}\",\n        \"surname\": \"{{surname}}\",\n        \"idCard\": \"{{idCard}}\",\n        \"postcode\": \"{{postcode}}\",\n        \"dateOfBirth\": \"{{dateOfBirth}}\",\n        \"position\": \"{{position}}\",\n        \"startDate\": \"{{startDate}}\",\n        \"phoneNumber\": \"{{phoneNumber}}\",\n        \"address\": \"{{address}}\"\n    },\n    \"timestamp\": \"{{timestamp}}\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6cc7b6aa-3759-495d-880f-d39dbdda54e4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Body is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user added`);",
                  "});"
                ],
                "_lastExecutionId": "9fa98477-d8fc-4b5e-a265-d4a87d21d68c"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "c31740db-e1ae-439d-8f74-a188627edc86",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 537,
              "system": true
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"message\": \"New Employee Added\",\n    \"adminId\": \"251195\",\n    \"adminUser\": \"chatchanokwon\",\n    \"object\": {\n        \"action\": \"Added\",\n        \"userId\": \"2511170\",\n        \"name\": \"Nattawit\",\n        \"surname\": \"Janjaroen\",\n        \"idCard\": \"1111111111111\",\n        \"postcode\": \"10200\",\n        \"dateOfBirth\": \"27/09/1995\",\n        \"position\": \"Junior Backend Developer\",\n        \"startDate\": \"01/07/2020\",\n        \"phoneNumber\": \"0824933423\",\n        \"address\": \"Bangkok\"\n    },\n    \"timestamp\": \"Wed, 19 Aug 2020 04:05:03 GMT\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "c51aa027-5bd6-4430-899d-de6fd171e758",
          "status": "Created",
          "code": 201,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:07 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              97,
              100,
              100,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 84,
          "responseSize": 32
        },
        "id": "55398ae7-67a7-49d3-a46f-42784cc4b6b6",
        "assertions": [
          {
            "assertion": "Status code is 201",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "c1691b24-5641-4866-a56c-7bfcad2458e6",
          "length": 4,
          "cycles": 9,
          "position": 2,
          "iteration": 8,
          "httpRequestId": "0d4d4bce-13e9-4ead-901e-a6181a443235"
        },
        "item": {
          "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
          "name": "update data",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"message\": \"{{update_message}}\",\r\n    \"adminId\": \"{{update_adminId}}\",\r\n    \"adminUser\": \"{{update_adminUser}}\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"{{userId}}\",\r\n        \"name\": null,\r\n        \"surname\": \"{{update_surname}}\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"{{update_postcode}}\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"{{update_position}}\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"{{timestamp}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "025a43e6-b859-4b8f-af09-0d32ee078d38",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`Change [last name, postcode, position] of user ${data[\"userId\"]}`);\r",
                  "});"
                ],
                "_lastExecutionId": "83e79b9c-800c-461f-8473-6041fd631f35"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "4738e5d0-e32a-41f2-a5a9-c0d09d7558a0",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            },
            {
              "key": "Content-Length",
              "value": 486,
              "system": true
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "{\r\n    \"message\": \"edit surname of 2511170\",\r\n    \"adminId\": \"251174\",\r\n    \"adminUser\": \"phisonkha\",\r\n    \"object\": {\r\n        \"action\": null,\r\n        \"userId\": \"2511170\",\r\n        \"name\": null,\r\n        \"surname\": \"khankhang\",\r\n        \"idCard\": null,\r\n        \"postcode\": \"10510\",\r\n        \"dateOfBirth\": null,\r\n        \"position\": \"CEO\",\r\n        \"startDate\": null,\r\n        \"phoneNumber\": null,\r\n        \"address\": null\r\n    },\r\n    \"timestamp\": \"Wed, 19 Aug 2020 04:05:03 GMT\"\r\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "a4bf83f9-7a1f-4311-bc81-0ac2cef6d759",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:07 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              67,
              104,
              97,
              110,
              103,
              101,
              32,
              91,
              108,
              97,
              115,
              116,
              32,
              110,
              97,
              109,
              101,
              44,
              32,
              112,
              111,
              115,
              116,
              99,
              111,
              100,
              101,
              44,
              32,
              112,
              111,
              115,
              105,
              116,
              105,
              111,
              110,
              93,
              32,
              111,
              102,
              32,
              117,
              115,
              101,
              114,
              32,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 80,
          "responseSize": 68
        },
        "id": "539866fd-7d8d-418f-9bc2-d0b14503176c",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      },
      {
        "cursor": {
          "ref": "babf337e-d2a4-440c-8b99-c40d6d8006d0",
          "length": 4,
          "cycles": 9,
          "position": 3,
          "iteration": 8,
          "httpRequestId": "2442f29d-bdb1-4705-9529-e5eb9bdf492f"
        },
        "item": {
          "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
          "name": "delete user",
          "request": {
            "url": {
              "protocol": "http",
              "port": "8080",
              "path": [
                "api",
                "v1",
                "user",
                "{{userId}}"
              ],
              "host": [
                "159",
                "65",
                "129",
                "76"
              ],
              "query": [
                {
                  "key": "adminId",
                  "value": "{{update_adminId}}"
                },
                {
                  "key": "timestamp",
                  "value": "{{timestamp}}"
                }
              ],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0be2f5dd-3b99-465f-a9d8-2b466905017d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Body is correct\", function () {\r",
                  "    var jsonData = pm.response.json();\r",
                  "    pm.expect(jsonData.message).to.eql(`${data[\"userId\"]} user deleted`);\r",
                  "});\r",
                  ""
                ],
                "_lastExecutionId": "9ebd8ced-4c70-4b17-99ed-9739a3b4e846"
              }
            }
          ]
        },
        "request": {
          "url": {
            "protocol": "http",
            "port": "8080",
            "path": [
              "api",
              "v1",
              "user",
              "2511170"
            ],
            "host": [
              "159",
              "65",
              "129",
              "76"
            ],
            "query": [
              {
                "key": "adminId",
                "value": "251174"
              },
              {
                "key": "timestamp",
                "value": "Wed,%2019%20Aug%202020%2004:05:03%20GMT"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.26.2",
              "system": true
            },
            {
              "key": "Accept",
              "value": "*/*",
              "system": true
            },
            {
              "key": "Cache-Control",
              "value": "no-cache",
              "system": true
            },
            {
              "key": "Postman-Token",
              "value": "9619236e-991a-4fe7-8144-091b3ad9e7e6",
              "system": true
            },
            {
              "key": "Host",
              "value": "159.65.129.76:8080",
              "system": true
            },
            {
              "key": "Accept-Encoding",
              "value": "gzip, deflate, br",
              "system": true
            },
            {
              "key": "Connection",
              "value": "keep-alive",
              "system": true
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": {
          "id": "61f2b6ab-aff8-4e2b-b389-e74d0d1af221",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked"
            },
            {
              "key": "Date",
              "value": "Wed, 19 Aug 2020 10:37:07 GMT"
            },
            {
              "key": "Keep-Alive",
              "value": "timeout=60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              50,
              53,
              49,
              49,
              49,
              55,
              48,
              32,
              117,
              115,
              101,
              114,
              32,
              100,
              101,
              108,
              101,
              116,
              101,
              100,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 79,
          "responseSize": 34
        },
        "id": "3fe37a06-b7ee-49d0-b06a-eeacf488c926",
        "assertions": [
          {
            "assertion": "Status code is 200",
            "skipped": false
          },
          {
            "assertion": "Body is correct",
            "skipped": false
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 1746
    },
    "failures": [],
    "error": null
  }
}